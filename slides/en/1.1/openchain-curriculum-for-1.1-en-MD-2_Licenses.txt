** CHAPTER 2

Introduction to FOSS Licenses

# --------------------

** FOSS Licenses 

- FOSS licenses by definition make source code available under terms that
  allow for modification and redistribution

- FOSS licenses may have conditions related to providing attributions,
  copyright statement preservation, or a written offer to make the source code
  available

- One popular set of licenses are those approved by the Open Source Initiative
  (OSI) based on their Open Source Definition (OSD). A complete list of OSI-
  approved licenses is available at http://www.opensource.org/licenses/

# --------------------

** Permissive FOSS Licenses

- Permissive FOSS license: a term used often to describe minimally restrictive
  FOSS licenses

- Example: BSD-3-Clause
  - The BSD license is an example of a permissive license that allows unlimited
    redistribution for any purpose in source or object code form as long as its copyright
    notices and the license's disclaimers of warranty are maintained
  - The license contains a clause restricting use of the names of contributors for
    endorsement of a derived work without specific permission

- Other examples: MIT, Apache-2.0

# --------------------

** License Reciprocity & Copyleft Licenses

- Some licenses require that if derivative works (or software in the same file,
  same program or other boundary) are distributed, the distribution is under the
  same terms as the original work

- This is referred to as a “copyleft” or “reciprocal” effect

- Example of license reciprocity from the GPL version 2.0:
  - You must cause any work that you distribute or publish, that in whole or in part contains
    or is derived from the Program or any part thereof, to be licensed […] under the terms
    of this License.

- Licenses that include reciprocity or Copyleft clauses include all versions of
  the GPL, LGPL, AGPL, MPL and CDDL 

# --------------------

** Proprietary License or Closed Source

- A proprietary software license (or commercial license or EULA) has
  restrictions on the usage, modification and/or distribution of the software

- Proprietary licenses are unique to each vendor – there are as many variations
  of proprietary licenses as there are vendors and each must be evaluated
  individually

- FOSS developers often use the term “proprietary” to describe a commercial
  non-FOSS license, even though both FOSS and proprietary licenses are based
  on intellectual property and provide a license grant to that property

# --------------------

** Other Non-FOSS Licensing Situations

- Freeware – software distributed under a proprietary license at no
  or very low cost
  - The source code may or may not be available, and creation of derivative works is usually restricted
  - Freeware software is usually fully functional (no locked features) and available for unlimited use (no
    locking on days of usage) 
  - Freeware software licenses usually impose restrictions in relation to copying, distributing, and
    making derivative works of the software, as well as restrictions on the type of usage (personal,
    commercial, academic, etc.)

- Shareware – proprietary software provided to users on a trial basis,
  for a limited time, free of charge and with limited functionalities or features
  - The goal of shareware is to give potential buyers the opportunity to use the program and judge its
    usefulness before purchasing a license for the full version of the software 
  - Most companies are very leery of Shareware, because Shareware vendors often approach
    companies for large license payments after the software has freely propagated within their
    organizations.

# --------------------

** Other Non-FOSS Licensing Situations

- “Non-commercial” – some licenses have most of the characteristics of a
  FOSS license, but are limited to non-commercial use (e.g. CC-BY-NC).
  - FOSS by definition cannot limit the field of use of the software
  - Commercial use is a field of use so any restriction prevents the license from being FOSS

# --------------------

** Public Domain

- The term public domain refers to software not protected by law and therefore
  usable by the public without requiring a license 

- Developers may include a public domain declaration with their software 
  - E.g., “All of the code and documentation in this software has been dedicated to the public
    domain by the authors.”
  - The public domain declaration is not the same as a FOSS license


- A public domain declaration attempts to waive or eliminate any intellectual property rights
  that the developers may have in the software to make it clear that it can be used without
  restriction, but the enforceability of these declarations is subject to dispute within the FOSS
  community and its effectiveness at law varies from jurisdiction to jurisdiction

- Often the public domain declaration is accompanied by other terms, such as warranty
  disclaimers; in such cases, the software may be viewed as being under a license rather than
  being in the public domain

# --------------------

** License Compatibility

- License compatibility is the process of ensuring that license terms do not
  conflict. 

- If one license requires you to do something and another prohibits doing that,
  the licenses conflict and are not compatible if the combination of the two
  software modules trigger the obligations under a license.
  - GPL-2.0 and EPL-1.0 each extend their obligations to “derivative works” which are distributed. 
  - If a GPL-2.0 module is combined with an EPL-1.0 module and the merged module is distributed, that
    module must
    - (according to GPL-2.0) be distributed under GPL-2.0 only, and
    - (according to EPL-1.0) under EPL-1.0 only. 
  - The distributor cannot satisfy both conditions at once so the module may not be distributed. 
  - This is an example of license incompatibility.

The definition of “derivative work” is subject to different views in the FOSS community and
its interpretation in law is likely to vary from jurisdiction to jurisdiction.

# --------------------

** Notices

Notices, such as text in comments in file headers, often provide authorship and
licensing information. FOSS licenses may also require the placement of notices in
or alongside source code or documentation to give credit to the author (an
attribution) or to make it clear the software includes modifications. 

- Copyright notice – an identifier placed on copies of the work to inform the world
  of copyright ownership. Example: Copyright © A. Person (2016) 

- License notice – a notice that specifies and acknowledges the license terms and
  conditions of the FOSS included in the product.

- Attribution notice – a notice included in the product release that acknowledges
  the identity of the original authors and / or sponsors of the FOSS included in the
  product.

- Modification notice – a notice that you have made modifications to the source
  code of a file, such as adding your copyright notice to the top of the file. 

# --------------------

** Multi-Licensing

- Multi-licensing refers to the practice of distributing software under two or more
  different sets of terms and conditions simultaneously
  - E.g., when software is “dual licensed,” the copyright owner gives each recipient the choice of
    two licenses

- Note: This should not be confused for situations in which a licensor imposes
  more than one license, and you must comply with all of them

# --------------------

** Check Your Understanding

- What is a FOSS license?

- What are typical obligations of a permissive FOSS license?

- Name some permissive FOSS licenses.

- What does license reciprocity mean?

- Name some copyleft-style licenses.

- What needs to be distributed for code used under a copyleft license? 

- Are Freeware and Shareware software considered FOSS?

- What is a multi-license?

- What information may you find in FOSS Notices, and how may the notices be
  used? 

# ====================

